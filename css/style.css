/*////////////// Fonts //////////////*/

/* link the web font used for the level 1 heading here */

/* @import url('../fonts/Baskerville.ttc'); /* This won't work, with or without the url method. */
/* Maybe I need to use something besides import and url? */
/* Update: Yes, I do! Here's how: */

@font-face {
  font-family: 'Baskerville';
  src: url('../fonts/Baskerville.ttc');
  /* This works as well (not sure which is better, or if I should use lowercase): */
  /* font-family: Baskerville; */
}
/*////////// Global Styles //////////*/

body {
	background: #F3EBE9;
	font-size: 100%;
	font-family: 'Times New Roman', serif; 
}

.wrapper {
	width: 960px;
	margin: 0 auto;
	background: #fff;
	padding: 0 45px 20px;
}

/* Write all remaining styles here */

h1 {
  font-family: 'Baskerville', serif; /* Note: I may not need the quotes. "serif" is a backup (see live page example). */
  font-size: 80px; /* Equivalently, 5em (note that setting the font-size in em relies on the default font-size of 1em = 16px). */
  margin: 0 0 5px;
  /* height: 20px; /* This isn't needed; it causes the image below to cover it. I would need to increase the bottom padding to about 80px. */
  /* Note that I cannot use 5em because ems depend DIRECTLY on the font-size! */
  /* By default, 1em = 16px, the default font-size. But in my case, 1em = 80px because I changed the font-size. See https://css-tricks.com/css-font-size/#article-header-id-2 for more information. */
  padding: 0 0 10px;
  border-bottom: 1px solid #ccc;
}

/* h1 a {
  border-bottom: 1px solid gray; /* Note: this just adds an extra underline.
} */

h1 a { /* Since the color only changes when the element is hovered over, this selector works for the rest of the link states! */
  color: #98ada6; /* This is needed here instead of inside the h1 selector; otherwise, it defaults to a different color! */
}

h1 a:hover {
  transition: color 1s ease; /* I need to play around with this. See what happens when this property is moved into the "h1 a" rule. */
  color: #6f7f7a;
}

#featured {
  border: 5px solid #98ada6;
}

h2 {
  font-size: 2em;
  color: #6f7f7a;
}

p {
  /* The live example has this, even though it's a default setting anyway: font-size: 1em; */
  margin: 0 0 20px 0; /* I need to watch the spacing closely here; I didn't catch it until I examined the live site example! */
  color: #555;
}

a {
  text-decoration: none; /* This hides the underline for ALL links. */
}

#about a {
  /* transition: text-decoration 2s ease; */ 
  /* I can, in fact, use the transition property on text-decoration according to https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_animated_properties. I just don't know how yet. */
  color: #1783c9;
}

#about a:hover {
  text-decoration: underline;
}

/* This won't change anything: #press a { width: 25%; } */

/* This isn't needed: #press nav { margin-right: 0; } */

#press img {
  transition: border-color 3s linear; /* I'll have to play with this later. */
  padding: 1px; /* Turns out, THIS is what I needed, not the width and box-sizing! Tricky! */
  border: 5px solid #ccc; /* This does something different for #press a. I need to target the images themselves! */
  /* This won't work: box-sizing: border-box; width: 24.5% or 25%; (plus, the images get blurrier). */
}

#press img:hover { /* Interesting. The :hover pseudo-class works on other elements besides <a>! */
  border-color: #6f7f7a;
}

/* This wasn't needed AT ALL, but I'll leave it here for future reference: */

/* #press a:link, #press a:visited, #press a:active { /* I may only need "nav a", but this makes more semantic sense.
  /* These have borders that change color when hovered over.
  /* I had thought they might be child elements layered on top of lower z-indexed color-changing parents.
  /* But I don't know that the parents would change color once their children were hovered over. I'll go with the simpler solution (Occam's Razor).
} */

footer { 
  /* This works, but these are either default settings or not needed at all. */
  /* display: block; /* Update: this is already the default. */
  /* width: 100%; /* Update: this is the default, since footers are block-level elements. */
  /* position: relative; /* Update: it turns out that this is NOT needed! I only need it for TBLR properties. */
  
  padding: 20px 0;
  text-align: right;
  font-size: 0.8em; /* I had this at 13px, but the live example had 0.8em, which = 12.8px. */
  color: #555;
}
